{{!< admin}}
<title>Admin-Video</title>

<div class="dashboard-header mb-4">
  <h3 class="dashboard-title text-2xl">
    <i class="fas fa-video me-2"></i>Qu·∫£n L√Ω Kh√≥a H·ªçc
  </h3>
  {{!-- <p class="text-muted mb-0">Qu·∫£n l√Ω v√† t·ªï ch·ª©c c√°c kh√≥a h·ªçc theo danh m·ª•c v√† c·∫•p ƒë·ªô</p> --}}
</div>

<main class="container-fluid px-4">
  <!-- Th·ªëng k√™ nhanh n·∫±m ngang -->
  <div class="row g-3 mb-4">
    <div class="col-md-3 col-sm-6">
      <div class="card shadow-sm border-0">
        <div class="card-body d-flex justify-content-between align-items-center">
          <div>
            <small class="text-muted">T·ªïng kh√≥a h·ªçc</small>
            <div class="fs-4 fw-bold mt-1">{{add videos.length deletedVideos.length}}</div>
          </div>
          <div class="rounded-circle bg-primary bg-opacity-10 p-3 d-flex align-items-center justify-content-center">
            <i class="fas fa-video text-primary fs-4"></i>
          </div>
        </div>
      </div>
    </div>

    <div class="col-md-3 col-sm-6">
      <div class="card shadow-sm border-0">
        <div class="card-body d-flex justify-content-between align-items-center">
          <div>
            <small class="text-muted">ƒêang ho·∫°t ƒë·ªông</small>
            <div class="fs-4 fw-bold mt-1">{{videos.length}}</div>
          </div>
          <div class="rounded-circle bg-success bg-opacity-10 p-3 d-flex align-items-center justify-content-center">
            <i class="fas fa-play-circle text-success fs-4"></i>
          </div>
        </div>
      </div>
    </div>

    <div class="col-md-3 col-sm-6">
      <div class="card shadow-sm border-0">
        <div class="card-body d-flex justify-content-between align-items-center">
          <div>
            <small class="text-muted">Kh√¥ng ho·∫°t ƒë·ªông</small>
            <div class="fs-4 fw-bold mt-1">{{deletedVideos.length}}</div>
          </div>
          <div class="rounded-circle bg-danger bg-opacity-10 p-3 d-flex align-items-center justify-content-center">
            <i class="fas fa-trash text-danger fs-4"></i>
          </div>
        </div>
      </div>
    </div>

    <div class="col-md-3 col-sm-6">
      <div class="card shadow-sm border-0">
        <div class="card-body d-flex justify-content-between align-items-center">
          <div>
            <small class="text-muted">Danh m·ª•c</small>
            <div class="fs-4 fw-bold mt-1">{{categories.length}}</div>
          </div>
          <div class="rounded-circle bg-warning bg-opacity-10 p-3 d-flex align-items-center justify-content-center">
            <i class="fas fa-folder text-warning fs-4"></i>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- B·ªô l·ªçc -->
  <div class="row g-3 mb-4">
    <div class="col-12">
      <div class="card shadow-sm border-0">
        <div class="card-body p-3">
          <form method="GET" action="/admin/videos" id="filterForm" class="row g-2 align-items-end">
            <div class="col-md-4">
              <input type="text" class="form-control form-control-sm" name="search" 
                     placeholder="üîç T√¨m ki·∫øm..." value="{{query.search}}">
            </div>
            <div class="col-md-3">
              <select class="form-select form-select-sm" name="category">
                <option value="all">üìÅ T·∫•t c·∫£ danh m·ª•c</option>
                {{#each categories}}
                  <option value="{{this}}" {{#if (eq ../query.category this)}}selected{{/if}}>{{this}}</option>
                {{/each}}
              </select>
            </div>
            <div class="col-md-3">
              <select class="form-select form-select-sm" name="level">
                <option value="all">üìä T·∫•t c·∫£ c·∫•p ƒë·ªô</option>
                {{#each levels}}
                  <option value="{{this}}" {{#if (eq ../query.level this)}}selected{{/if}}>{{this}}</option>
                {{/each}}
              </select>
            </div>
            <div class="col-md-2">
              <button type="submit" class="btn btn-primary btn-sm w-100">
                <i class="fas fa-filter me-1"></i>L·ªçc
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
</div>

  <!-- Tabs g·ªçn g√†ng -->
  <ul class="nav nav-pills mb-3" id="videoTabs">
    <li class="nav-item">
      <a class="nav-link active" href="#tabActive" data-bs-toggle="pill">
        <i class="fas fa-play-circle me-1"></i>Kh√≥a h·ªçc hi·ªán t·∫°i
      </a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#tabDeleted" data-bs-toggle="pill">
        <i class="fas fa-trash me-1"></i>ƒê√£ x√≥a
      </a>
    </li>
  </ul>

  <div class="tab-content">
    <!-- Tab: Video hi·ªán t·∫°i -->
    <div class="tab-pane fade show active" id="tabActive">
      <!-- Form th√™m video YouTube -->
      <div class="card shadow-sm border-0 mb-3">
        <div class="card-header bg-light py-2">
          <h6 class="mb-0"><i class="fab fa-youtube me-2 text-danger"></i>Th√™m kh√≥a h·ªçc t·ª´ YouTube</h6>
        </div>
        <div class="card-body p-3">
          <form id="youtubeSearchForm" class="row g-2 align-items-end">
        <div class="col-md-8">
              <input type="text" class="form-control form-control-sm" id="youtubeQuery" 
                     placeholder="Nh·∫≠p t·ª´ kh√≥a ho·∫∑c ID video YouTube">
        </div>
        <div class="col-md-4">
              <button type="submit" class="btn btn-danger btn-sm w-100">
                <i class="fab fa-youtube me-1"></i>T√¨m ki·∫øm
              </button>
        </div>
      </form>

      <!-- K·∫øt qu·∫£ preview -->
          <div id="youtubeResult" class="row g-2 mt-2 d-none">
            <div class="col-md-3">
              <img id="ytThumbnail" src="" class="img-fluid rounded" style="height: 80px; object-fit: cover;" />
        </div>
            <div class="col-md-9">
              <div class="row g-2">
                <div class="col-md-6">
                  <input type="text" id="ytTitleInput" class="form-control form-control-sm" placeholder="Ti√™u ƒë·ªÅ">
          </div>
                <div class="col-md-3">
                  <input type="text" id="ytCategory" class="form-control form-control-sm" placeholder="Danh m·ª•c">
            </div>
                <div class="col-md-3">
                  <select class="form-select form-select-sm" id="ytLevel">
                <option value="C∆° b·∫£n">C∆° b·∫£n</option>
                <option value="Trung b√¨nh" selected>Trung b√¨nh</option>
                <option value="N√¢ng cao">N√¢ng cao</option>
              </select>
            </div>
          </div>
              <div class="mt-2">
                <button class="btn btn-success btn-sm" id="ytAddBtn">
                  <i class="fas fa-plus me-1"></i>Th√™m v√†o h·ªá th·ªëng
                </button>
                <span id="ytMsg" class="ms-2"></span>
        </div>
      </div>
        </div>
        </div>
      </div>

             <!-- Danh s√°ch video theo danh m·ª•c  -->
       {{#if videos.length}}
         <div class="accordion show" id="videoAccordion">
           {{!-- Nh√≥m theo danh m·ª•c --}}
           {{#each (groupBy videos 'category')}}
             {{#if @key}}
               <div class="accordion-item border rounded-3 shadow-sm mb-3">
                 <h2 class="accordion-header" id="heading-{{@index}}">
                   <button 
                     class="accordion-button {{#unless @first}}collapsed{{/unless}} fw-bold text-primary" 
                     type="button" 
                     data-target="#collapse-{{@index}}" 
                     data-expanded="{{#if @first}}true{{else}}false{{/if}}"
                     data-category="{{@key}}">
                     <i class="fas fa-folder{{#if @first}} fa-folder-open text-warning{{/if}} me-2"></i>
                     {{@key}}
                     <span class="badge bg-light text-dark ms-2">{{countVideosInCategory ../videos @key}} kh√≥a h·ªçc</span>
                   </button>
                 </h2>

                <div 
                 id="collapse-{{@index}}" 
                 class="accordion-collapse {{#if @first}}show{{/if}}" 
                 data-expanded="{{#if @first}}true{{else}}false{{/if}}">
                 <div class="accordion-body p-2">

                  <div class="row g-3">
                    {{#each this}}
                      <div class="col-xl-3 col-lg-4 col-md-6">
                        <div class="card video-card h-100 border-0 shadow-sm hover-shadow">
                          <div class="position-relative">
                            <img 
                              src="{{#if (thumbnailIsUrl this.thumbnail)}}{{this.thumbnail}}
                                  {{else if (eq this.thumbnail 'default.jpg')}}/img/thumbnails/default.jpg
                                  {{else if this.thumbnail}}/img/thumbnails/{{this.thumbnail}}
                                  {{else}}/img/thumbnails/default.jpg{{/if}}" 
                              class="card-img-top rounded-top" 
                              alt="{{this.title}}" 
                              style="height: 140px; object-fit: cover;"
                              onerror="this.src='/img/thumbnails/default.jpg'; this.onerror=null;">

                            <span class="badge position-absolute top-0 start-0 m-2 
                              {{#if (eq this.level 'C∆° b·∫£n')}}bg-success
                              {{else if (eq this.level 'Trung b√¨nh')}}bg-warning
                              {{else}}bg-danger{{/if}}">
                              {{this.level}}
                            </span>

                            <span class="badge bg-dark position-absolute top-0 end-0 m-2">
                              <i class="fas fa-clock me-1"></i>{{this.duration}}h
                            </span>
                          </div>

                          <div class="card-body d-flex flex-column p-2">
                            <h6 class="card-title fw-bold mb-1 text-truncate" title="{{this.title}}">
                              {{this.title}}
                            </h6>

                            <div class="d-flex justify-content-between text-muted small mb-2">
                              <span><i class="fas fa-users me-1"></i>{{this.students}}</span>
                              <span><i class="fas fa-star text-warning me-1"></i>{{this.rating}}</span>
                            </div>

                            <a href="https://youtube.com/watch?v={{this.youtubeId}}" 
                              target="_blank" 
                              class="btn btn-outline-primary btn-sm mb-2">
                              <i class="fab fa-youtube me-1"></i>Xem
                            </a>

                            <div class="d-flex gap-1 mt-auto">
                              <button class="btn btn-warning btn-sm flex-fill btn-edit" data-id="{{_id}}">
                                <i class="fas fa-edit"></i>
                  </button>
                              <button class="btn btn-danger btn-sm flex-fill" onclick="confirmDelete('{{_id}}')">
                                <i class="fas fa-trash"></i>
                  </button>
                </div>
                          </div>
                        </div>
                      </div>
                    {{/each}}
                  </div>

                </div>
              </div>
            </div>
            {{/if}}
            {{/each}}
        </div>
      {{else}}
        <div class="text-center py-5">
          <i class="fas fa-video fa-3x text-muted mb-3"></i>
          <h5 class="text-muted">Kh√¥ng c√≥ kh√≥a h·ªçc n√†o</h5>
          <p class="text-muted">H√£y th√™m kh√≥a h·ªçc m·ªõi ho·∫∑c thay ƒë·ªïi b·ªô l·ªçc</p>
      </div>
      {{/if}}


    </div>

    <!-- Tab: Video ƒë√£ x√≥a -->
    <div class="tab-pane fade" id="tabDeleted">
      {{#if deletedVideos.length}}
        <div class="row g-3">
            {{#each deletedVideos}}
          <div class="col-xl-3 col-lg-4 col-md-6">
            <div class="card h-100 shadow-sm border-0 bg-light video-card">
              <div class="position-relative">
                <img src="{{#if (thumbnailIsUrl this.thumbnail)}}{{this.thumbnail}}{{else if (eq this.thumbnail 'default.jpg')}}/img/thumbnails/default.jpg{{else if this.thumbnail}}/img/thumbnails/{{this.thumbnail}}{{else}}/img/thumbnails/default.jpg{{/if}}" 
                     class="card-img-top" alt="{{this.title}}" 
                     style="height: 120px; object-fit: cover; opacity: 0.7;"
                     onerror="this.src='/img/thumbnails/default.jpg'; this.onerror=null;">
                
                <!-- Badge ƒë√£ x√≥a -->
                <span class="badge position-absolute top-0 start-0 m-1 bg-danger">
                  <i class="fas fa-trash me-1"></i>ƒê√£ x√≥a
                </span>
                
                <!-- Badge danh m·ª•c -->
                <span class="badge position-absolute top-0 end-0 m-1 bg-secondary">
                  {{this.category}}
                </span>
              </div>
              
              <div class="card-body d-flex flex-column p-2">
                <h6 class="card-title fw-bold mb-1 text-truncate text-muted small" title="{{this.title}}">
                  {{this.title}}
                </h6>
                
                <div class="row text-muted small mb-2">
                  <div class="col-6 text-center">
                    <i class="fas fa-tags mb-1 d-block"></i>
                    <span>{{this.category}}</span>
      </div>
                  <div class="col-6 text-center">
                    <i class="fas fa-signal mb-1 d-block"></i>
                    <span>{{this.level}}</span>
    </div>
  </div>

                <div class="mb-2">
                  <a href="https://youtube.com/watch?v={{this.youtubeId}}" target="_blank" 
                     class="btn btn-outline-secondary btn-sm w-100">
                    <i class="fab fa-youtube me-1"></i>Xem tr√™n YouTube
                  </a>
                </div>
                
                <div class="mt-auto">
                  <button class="btn btn-success btn-sm w-100 btn-restore" data-id="{{_id}}">
                    <i class="fas fa-undo me-1"></i>Kh√¥i ph·ª•c
                  </button>
                </div>
              </div>
            </div>
          </div>
          {{/each}}
        </div>
      {{else}}
        <div class="text-center py-5">
          <i class="fas fa-trash fa-3x text-muted mb-3"></i>
          <h5 class="text-muted">Kh√¥ng c√≥ kh√≥a h·ªçc n√†o b·ªã x√≥a</h5>
          <p class="text-muted">T·∫•t c·∫£ kh√≥a h·ªçc ƒëang ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng</p>
        </div>
      {{/if}}
    </div>
  </div>
</main>

<!-- Modal ch·ªânh s·ª≠a -->
<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
      <form id="editVideoForm">
        <div class="modal-header">
          <h5 class="modal-title"><strong>S·ª≠a Video</strong></h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" id="editVideoId">
          <div class="row g-3">
            <div class="col-md-6">
            <label class="form-label">YouTube ID</label>
            <input type="text" name="youtubeId" class="form-control" id="editYoutubeId" required>
          </div>
            <div class="col-md-6">
            <label class="form-label">Ti√™u ƒë·ªÅ</label>
            <input type="text" name="title" class="form-control" id="editTitle">
          </div>
            <div class="col-md-6">
            <label class="form-label">Danh m·ª•c</label>
            <input type="text" name="category" class="form-control" id="editCategory">
          </div>
            <div class="col-md-6">
            <label class="form-label">Tr√¨nh ƒë·ªô</label>
            <select name="level" class="form-select" id="editLevel">
              <option value="C∆° b·∫£n">C∆° b·∫£n</option>
              <option value="Trung b√¨nh">Trung b√¨nh</option>
              <option value="N√¢ng cao">N√¢ng cao</option>
            </select>
          </div>
            <div class="col-12">
            <label class="form-label">M√¥ t·∫£</label>
              <textarea name="description" class="form-control" rows="3" id="editDescription"></textarea>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-success">L∆∞u</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const searchForm = document.getElementById('youtubeSearchForm');
  const ytResult = document.getElementById('youtubeResult');
  const ytAddBtn = document.getElementById('ytAddBtn');

  let videoData = null;

  searchForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const query = document.getElementById('youtubeQuery').value.trim();
    if (!query) return;

    const res = await fetch(`/admin/videos/youtube-search?query=${encodeURIComponent(query)}`);
    const data = await res.json();

    if (data.video) {
      videoData = data.video;
      document.getElementById('ytThumbnail').src = videoData.thumbnail;
      document.getElementById('ytTitleInput').value = videoData.title;
      ytResult.classList.remove('d-none');
    } else {
      alert(data.message || 'Kh√¥ng t√¨m th·∫•y video');
      ytResult.classList.add('d-none');
    }
  });

  ytAddBtn.addEventListener('click', async () => {
    const titleInput = document.getElementById('ytTitleInput');
    const title = titleInput.value.trim() || videoData.title;
    const category = document.getElementById('ytCategory').value.trim();
    const level = document.getElementById('ytLevel').value;

    const msgDiv = document.getElementById('ytMsg');

    if (!title) {
      msgDiv.textContent = '‚ùå Kh√¥ng th·ªÉ l·∫•y ti√™u ƒë·ªÅ video';
      msgDiv.className = 'text-danger';
      return;
    }

    const payload = {
      ...videoData,
      title,
      category,
      level
    };

    const res = await fetch('/admin/videos/create', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload)
    });

    const result = await res.json();
    if (res.ok) {
      msgDiv.textContent = '‚úÖ Video ƒë√£ ƒë∆∞·ª£c th√™m!';
      msgDiv.className = 'text-success';
      location.reload();
    } else {
      msgDiv.textContent = '‚ùå ' + (result.message || 'Th√™m th·∫•t b·∫°i');
      msgDiv.className = 'text-danger';
    }
  });
});

function confirmDelete(id) {
  if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a video n√†y?')) {
    fetch(`/admin/videos/${id}/delete`, {
      method: 'DELETE'
    }).then(res => {
      if (res.ok) location.reload();
      else alert('L·ªói khi x√≥a!');
    });
  }
}

document.addEventListener('DOMContentLoaded', () => {
  const editButtons = document.querySelectorAll('.btn-edit');

  editButtons.forEach(button => {
    button.addEventListener('click', async (e) => {
      const card = button.closest('.video-card') || button.closest('.card');
      if (!card) return; // üîí tr√°nh l·ªói null
      const id = button.dataset.id;

      // L·∫•y th√¥ng tin t·ª´ card v·ªõi ki·ªÉm tra null
      const titleElement = card.querySelector('.card-title');
      const accordionButton = card.closest('.accordion-item')?.querySelector('.accordion-button');
      const levelBadge = card.querySelector('.badge.bg-success, .badge.bg-warning, .badge.bg-danger');
      const youtubeLink = card.querySelector('a[href*="youtube.com"]');
      
      if (!titleElement || !accordionButton || !levelBadge || !youtubeLink) {
        console.warn('Kh√¥ng th·ªÉ t√¨m th·∫•y ƒë·∫ßy ƒë·ªß th√¥ng tin t·ª´ card:', { titleElement, accordionButton, levelBadge, youtubeLink });
        return;
      }
      
      const title = titleElement.textContent.trim();
      
      // L·∫•y category t·ª´ accordion button, lo·∫°i b·ªè icon v√† badge
      let category = accordionButton.textContent.trim();
      // Lo·∫°i b·ªè icon folder, emoji v√† badge s·ªë l∆∞·ª£ng
      category = category.replace(/üìÅ|üìä|fas fa-folder.*?me-2|badge.*?kh√≥a h·ªçc|folder|folder-open|text-warning|me-2/g, '').trim();
      // Lo·∫°i b·ªè c√°c class CSS c√≤n s√≥t l·∫°i
      category = category.replace(/\s+/g, ' ').trim();
      
      // N·∫øu category v·∫´n ch·ª©a nhi·ªÅu text kh√¥ng mong mu·ªën, th·ª≠ l·∫•y t·ª´ data attribute
      if (category.length > 50 || category.includes('badge') || category.includes('fas')) {
        // L·∫•y category t·ª´ data attribute n·∫øu c√≥
        const categoryData = accordionButton.getAttribute('data-category');
        if (categoryData) {
          category = categoryData;
        } else {
          // Fallback: l·∫•y text ƒë·∫ßu ti√™n tr∆∞·ªõc khi c√≥ icon
          const textNodes = Array.from(accordionButton.childNodes)
            .filter(node => node.nodeType === Node.TEXT_NODE)
            .map(node => node.textContent.trim())
            .filter(text => text.length > 0);
          
          if (textNodes.length > 0) {
            category = textNodes[0];
          }
        }
      }
      
      const level = levelBadge.textContent.trim();
      const youtubeId = youtubeLink.href.split('v=')[1];
      
      // ƒê·ªï d·ªØ li·ªáu v√†o form
      document.getElementById('editVideoId').value = id;
      document.getElementById('editYoutubeId').value = youtubeId;
      document.getElementById('editTitle').value = title;
      document.getElementById('editCategory').value = category;
      document.getElementById('editLevel').value = level;

      console.log('Th√¥ng tin video ƒë·ªÉ edit:', { id, title, category, level, youtubeId });
      console.log('Raw accordion button text:', accordionButton.textContent);
      console.log('Processed category:', category);

      // G·ªçi API ƒë·ªÉ l·∫•y m√¥ t·∫£
      try {
        const apiKey = 'AIzaSyCAsJisZhiEP6Haersjru30mcOnwZ3lLhs';
        const apiUrl = `https://www.googleapis.com/youtube/v3/videos?id=${youtubeId}&part=snippet,contentDetails&key=${apiKey}`;
        const res = await fetch(apiUrl);
        
        if (!res.ok) {
          throw new Error(`API response: ${res.status}`);
        }
        
        const data = await res.json();
        const video = data.items?.[0];
        if (video) {
          document.getElementById('editDescription').value = video.snippet.description || '';
        } else {
          document.getElementById('editDescription').value = '';
        }
      } catch (err) {
        console.warn('Kh√¥ng th·ªÉ l·∫•y m√¥ t·∫£ t·ª´ API:', err);
        document.getElementById('editDescription').value = '';
      }

      const modal = new bootstrap.Modal(document.getElementById('editModal'));
      modal.show();
    });
  });

  // G·ª≠i form c·∫≠p nh·∫≠t
  document.getElementById('editVideoForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const id = document.getElementById('editVideoId').value;
    const payload = {
      title: document.getElementById('editTitle').value,
      description: document.getElementById('editDescription').value,
      youtubeId: document.getElementById('editYoutubeId').value,
      category: document.getElementById('editCategory').value,
      level: document.getElementById('editLevel').value,
    };

    const res = await fetch(`/admin/videos/${id}/edit`, {
      method: 'PATCH',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload),
    });

    if (res.ok) location.reload();
    else alert('L·ªói khi c·∫≠p nh·∫≠t video!');
  });
});

document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('.btn-restore').forEach(button => {
    button.addEventListener('click', async () => {
      const id = button.getAttribute('data-id');
      if (confirm('B·∫°n c√≥ ch·∫Øc mu·ªën kh√¥i ph·ª•c video n√†y kh√¥ng?')) {
        try {
          const res = await fetch(`/admin/videos/${id}/restore`, {
            method: 'PATCH',
            headers: { 'Content-Type': 'application/json' }
          });

          if (res.ok) {
            location.reload();
          } else {
            alert('Kh√¥i ph·ª•c th·∫•t b·∫°i!');
          }
        } catch (err) {
          console.error('L·ªói kh√¥i ph·ª•c:', err);
          alert('C√≥ l·ªói x·∫£y ra!');
        }
      }
    });
  });
});

// B·ªô l·ªçc n√¢ng cao
  document.addEventListener('DOMContentLoaded', function () {
  const filterForm = document.getElementById('filterForm');
  const searchInput = filterForm.querySelector('input[name="search"]');
  const categorySelect = filterForm.querySelector('select[name="category"]');
  const levelSelect = filterForm.querySelector('select[name="level"]');
  
  // T·ª± ƒë·ªông submit form khi thay ƒë·ªïi select
  categorySelect.addEventListener('change', function() {
    filterForm.submit();
  });
  
  levelSelect.addEventListener('change', function() {
    filterForm.submit();
  });
  
  // Debounce search input
  let searchTimeout;
  searchInput.addEventListener('input', function() {
    clearTimeout(searchTimeout);
    searchTimeout = setTimeout(() => {
      filterForm.submit();
    }, 500);
  });
  
  // Loading state
  filterForm.addEventListener('submit', function() {
    const submitBtn = filterForm.querySelector('button[type="submit"]');
    const originalText = submitBtn.innerHTML;
    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>ƒêang l·ªçc...';
    submitBtn.disabled = true;
    
    setTimeout(() => {
      submitBtn.innerHTML = originalText;
      submitBtn.disabled = false;
    }, 3000);
  });

  // X·ª≠ l√Ω toggle accordion
  const accordionButtons = document.querySelectorAll('.accordion-button');
  
  accordionButtons.forEach(button => {
    button.addEventListener('click', function(e) {
      e.preventDefault();
      
      const targetId = this.getAttribute('data-target');
      const targetCollapse = document.querySelector(targetId);
      
      // Ki·ªÉm tra element t·ªìn t·∫°i tr∆∞·ªõc khi s·ª≠ d·ª•ng
      if (!targetCollapse) {
        console.warn('Kh√¥ng t√¨m th·∫•y target collapse:', targetId);
        return;
      }
      
      const isExpanded = this.getAttribute('data-expanded') === 'true';
      
      if (isExpanded) {
        // ƒê√≥ng accordion
        this.setAttribute('data-expanded', 'false');
        this.classList.add('collapsed');
        targetCollapse.classList.remove('show');
        targetCollapse.setAttribute('data-expanded', 'false');
        
        // ·∫®n n·ªôi dung
        setTimeout(() => {
          if (targetCollapse.getAttribute('data-expanded') === 'false') {
            targetCollapse.style.display = 'none';
          }
        }, 300);
        
        const icon = this.querySelector('i');
        if (icon) {
          icon.className = icon.className.replace('fa-folder-open', 'fa-folder');
          icon.classList.remove('text-warning');
        }
      } else {
        // M·ªü accordion
        this.setAttribute('data-expanded', 'true');
        this.classList.remove('collapsed');
        targetCollapse.classList.add('show');
        targetCollapse.setAttribute('data-expanded', 'true');
        targetCollapse.style.display = 'block';
        
        const icon = this.querySelector('i');
        if (icon) {
          icon.className = icon.className.replace('fa-folder', 'fa-folder-open');
          icon.classList.add('text-warning');
        }
      }
    });
  });
  
  // Kh·ªüi t·∫°o tr·∫°ng th√°i ban ƒë·∫ßu cho accordion
  accordionButtons.forEach(button => {
    const isExpanded = button.getAttribute('data-expanded') === 'true';
    const icon = button.querySelector('i');
    const targetId = button.getAttribute('data-target');
    const targetCollapse = document.querySelector(targetId);
    
    if (icon && isExpanded) {
      icon.className = icon.className.replace('fa-folder', 'fa-folder-open');
      icon.classList.add('text-warning');
    }
    
    // ƒê·∫£m b·∫£o tr·∫°ng th√°i hi·ªÉn th·ªã ban ƒë·∫ßu
    if (targetCollapse) {
      if (isExpanded) {
        targetCollapse.style.display = 'block';
      } else {
        targetCollapse.style.display = 'none';
      }
    }
  });
  });
</script>
