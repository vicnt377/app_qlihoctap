<!-- Tiêu đề -->
<div class="dashboard-header mb-4 d-flex justify-content-between align-items-center">
  <h2 class="dashboard-title mb-0">
    <i class="fas fa-calendar-alt me-2"></i> Lịch Học
  </h2>
</div>

<main class="container mt-4">

<!-- Tabs -->
<ul class="nav nav-tabs mb-4" id="semesterTabs" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="calendar-tab" data-bs-toggle="tab" data-bs-target="#calendarSection" type="button">
      <strong>Thời khóa biểu</strong>
    </button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="add-tab" data-bs-toggle="tab" data-bs-target="#addSection" type="button">
      <strong>Thêm học kỳ</strong>
    </button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="list-tab" data-bs-toggle="tab" data-bs-target="#listSection" type="button">
      <strong>Danh sách học kỳ</strong>
    </button>
  </li>
</ul>

<!-- Nội dung tab -->
<div class="tab-content" id="semesterTabContent">
  <!-- Tab 1: Calendar -->
  <div class="tab-pane fade show active" id="calendarSection">
    <div class="mt-3">
      <div id="calendar"></div>
    </div>
  </div>

  <!-- Tab 2: Form thêm học kỳ + Danh sách học phần -->
  <div class="tab-pane fade" id="addSection">
    <form id="addSemesterForm" class="mb-4">
      <div class="card mb-4 shadow-sm">
        <div class="card-body row g-3">
          <div class="col-md-3">
            <label for="tenHocKy" class="form-label"><strong>Tên học kỳ</strong></label>
            <input type="text" class="form-control" id="tenHocKy" name="tenHocKy" placeholder="VD: Học Kỳ 1" required>
          </div>
          <div class="col-md-3">
            <label for="startDate" class="form-label"><strong>Ngày bắt đầu</strong></label>
            <input type="date" class="form-control" id="startDate" name="startDate" required>
          </div>
          <div class="col-md-2">
            <label for="soTuan" class="form-label"><strong>Số tuần</strong></label>
            <input type="number" class="form-control" id="soTuan" name="soTuan" min="1" max="52" value="18" required>
          </div>
          <div class="col-md-2 d-flex align-items-end">
            <button type="submit" class="btn btn-success w-100">Thêm học kỳ</button>
          </div>
        </div>
      </div>
    </form>

    <!-- Danh sách học phần đã chọn -->
    <div class="card shadow-sm mb-5">
      <div class="card-header bg-light fw-bold d-flex justify-content-between align-items-center">
        <strong>Danh sách học phần đã chọn</strong>
        <button type="button" class="btn btn-sm btn-primary col-md-2" data-bs-toggle="modal" data-bs-target="#addCourseModal">
          Thêm học phần
        </button>
      </div>
      <div class="card-body table-responsive">
        <table class="table table-hover align-middle">
          <thead class="table-light">
            <tr>
              <th>STT</th>
              <th>Tên học phần</th>
              <th>Mã học phần</th>
              <th>Thứ</th>
              <th>Bắt đầu</th>
              <th>Kết thúc</th>
              <th>Chọn</th>
            </tr>
          </thead>
          <tbody id="scoreTableBody">
            {{#each scores}}
              <tr>
                <td>{{inc @index}}</td>
                <td>{{HocPhan.tenHocPhan}}</td>
                <td>{{HocPhan.maHocPhan}}</td>
                <td>{{thu}}</td>
                <td>{{gioBatDau}}</td>
                <td>{{gioKetThuc}}</td>
                <td><input type="checkbox" name="selectedScores" value="{{_id}}"></td>
              </tr>
            {{else}}
              <tr>
                <td colspan="7" class="text-center text-muted">Không có học phần nào khả dụng.</td>
              </tr>
            {{/each}}
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <!-- Tab 3: Danh sách học kỳ -->
  <div class="tab-pane fade" id="listSection">
    {{#if classesGroupedBySemester.length}}
      {{#each classesGroupedBySemester}}
        <div class="card mb-4">
          <div class="card-header bg-light fw-bold d-flex justify-content-between align-items-center">
            <h4 style="color: #0dcaf0">{{tenHocKy}} ({{formatDate startDate}} → {{formatDate (addDays startDate (multiply soTuan 7))}})</h4>
            <div>
              <a href="/semester/edit/{{_id}}" class="btn btn-sm btn-warning">Sửa</a>
              <button onclick="deleteSemester('{{_id}}')" class="btn btn-sm btn-danger">Xóa</button>
            </div>
          </div>
          <div class="card-body table-responsive">
            <table class="table table-bordered align-middle">
              <thead>
                <tr>
                  <th>STT</th>
                  <th>Tên học phần</th>
                  <th>Mã học phần</th>
                  <th>Thứ</th>
                  <th>Giờ bắt đầu</th>
                  <th>Giờ kết thúc</th>
                  <th>Tín chỉ</th>
                </tr>
              </thead>
              <tbody>
                {{#each scores}}
                  <tr>
                    <td>{{inc @index}}</td>
                    <td>{{HocPhan.tenHocPhan}}</td>
                    <td>{{HocPhan.maHocPhan}}</td>
                    <td>{{thu}}</td>
                    <td>{{gioBatDau}}</td>
                    <td>{{gioKetThuc}}</td>
                    <td>{{HocPhan.soTinChi}}</td>
                  </tr>
                {{/each}}
              </tbody>
            </table>
          </div>
        </div>
      {{/each}}
    {{else}}
      <p class="text-muted">Chưa có học kỳ nào được tạo.</p>
    {{/if}}
  </div>
</div>
</main>

<!-- Modal Thêm Học Phần -->
<div class="modal fade" id="addCourseModal" tabindex="-1" aria-labelledby="addCourseModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content shadow">
      <form id="modalAddCourseForm">
        <div class="modal-header">
          <h5 class="modal-title" id="addCourseModalLabel">Thêm học phần mới</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
        </div>

        <div class="modal-body row g-3">
          <div class="col-md-12">
            <label class="form-label">Chọn học phần</label>
            <select name="HocPhan" class="form-select" required>
              <option value="">-- Chọn học phần --</option>
              {{#each courses}}
                <option value="{{_id}}">{{tenHocPhan}} ({{maHocPhan}})</option>
              {{/each}}
            </select>
          </div>

          <div class="col-md-4">
            <label class="form-label">Thứ</label>
            <select name="thu" class="form-select" required>
              <option>Thứ Hai</option>
              <option>Thứ Ba</option>
              <option>Thứ Tư</option>
              <option>Thứ Năm</option>
              <option>Thứ Sáu</option>
              <option>Thứ Bảy</option>
            </select>
          </div>

          <div class="col-md-4">
            <label class="form-label">Giờ bắt đầu</label>
            <input type="time" name="gioBatDau" class="form-control" required>
          </div>

          <div class="col-md-4">
            <label class="form-label">Giờ kết thúc</label>
            <input type="time" name="gioKetThuc" class="form-control" required>
          </div>
        </div>

        <div class="modal-footer">
          <button type="submit" class="btn btn-success">Thêm vào danh sách</button>
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  document.getElementById('modalAddCourseForm').addEventListener('submit', async function(e) {
    e.preventDefault();

    const formData = new FormData(e.target);
    const data = Object.fromEntries(formData.entries());

    try {
      const res = await fetch('/semester/add-course', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      });

      const result = await res.json();

      if (res.ok) {
        alert(result.message);
        location.reload();
      } else {
        alert(result.message || 'Lỗi khi thêm học phần.');
      }
    } catch (err) {
      console.error('Lỗi gửi dữ liệu:', err);
      alert('❌ Lỗi khi gửi dữ liệu lên server!');
    }
  });
</script>

<script>
  document.getElementById('addSemesterForm').addEventListener('submit', async function (e) {
    e.preventDefault(); // Ngăn form reload mặc định

    const tenHocKy = document.getElementById('tenHocKy').value.trim();
    const startDate = document.getElementById('startDate').value;
    const soTuan = document.getElementById('soTuan').value || 18;

    // ✅ Lấy danh sách score đã chọn (checkbox)
    const checkboxes = document.querySelectorAll('input[name="selectedScores"]:checked');
    const selectedScoreIds = Array.from(checkboxes).map(cb => cb.value);

    if (!tenHocKy || !startDate || selectedScoreIds.length === 0) {
      alert('Vui lòng nhập đầy đủ thông tin và chọn ít nhất một học phần!');
      return;
    }

    try {
      const response = await fetch('/semester/add', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          tenHocKy,
          startDate,
          soTuan,
          selectedScores: selectedScoreIds
        }),
      });

      const data = await response.json();

      if (response.ok) {
        alert(data.message || '✅ Thêm học kỳ thành công!');
        location.reload(); // ✅ Reload lại trang để hiển thị học kỳ mới
      } else {
        alert(data.message || '❌ Đã xảy ra lỗi khi thêm học kỳ.');
      }

    } catch (error) {
      console.error('Lỗi fetch:', error);
      alert('❌ Lỗi kết nối đến server.');
    }
  });
</script>



<script>
  function deleteSemester(id) {
    if (confirm("Bạn có chắc chắn muốn xóa học kỳ này?")) {
      fetch(`/semester/delete/${id}`, {
        method: 'POST'
      })
        .then(res => res.ok ? location.reload() : alert("Không thể xóa học kỳ."))
        .catch(err => {
          console.error(err);
          alert("Lỗi server.");
        });
    }
  }
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const calendarEl = document.getElementById('calendar');
    if (!calendarEl) return;

    const calendar = new FullCalendar.Calendar(calendarEl, {
      locale: 'vi',
      initialView: 'timeGridWeek',
      allDaySlot: false,
      slotMinTime: '07:00:00',
      slotMaxTime: '18:00:00',
      headerToolbar: {
        left: 'prev,today,next',
        center: 'title',
        right: 'dayGridMonth,timeGridWeek,timeGridDay'
      },
      height: 'auto',
      expandRows: true,
      events: {{{json events}}},
      eventDidMount: function(info) {
        new bootstrap.Tooltip(info.el, {
          title: info.event.title,
          placement: 'top'
        });
      }
    });

    calendar.render();
  });
</script>
