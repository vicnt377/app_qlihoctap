<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

<!-- Header Section with Gradient Background -->
<div class="document-header mb-3">
  <div class="container-fluid">
    <div class="row align-items-center">
      <div class="col-md-8">
        <h1 class="h2 fw-bold text-white mb-1">
          <i class="fas fa-book me-2"></i>Học Phần
        </h1>
        <p class="text-white-50 mb-0">Quản lý và theo dõi các học phần đã đăng ký</p>
      </div>
    </div>
  </div>
</div>


<main class="container-fluid px-4">
  <!-- Search Section -->
  <div class="card shadow-sm border-0 mb-4">
    <div class="card-body p-4">
      <div class="row align-items-center">
        <div class="col-md-8">
          <div class="input-group">
            <span class="input-group-text bg-orange text-white">
              <i class="fas fa-search"></i>
            </span>
            <input type="text" class="form-control" id="searchInput" placeholder="Tìm kiếm học phần...">
          </div>
        </div>
        <div class="col-md-4">
          <p class="text-muted mb-0"><small><i class="fas fa-info-circle me-1"></i>(*) Là học phần điều kiện, không tính điểm trung bình chung tích lũy.</small></p>
        </div>
      </div>
    </div>
  </div>

  <!-- Course Table -->
  <div class="card shadow-sm border-0 mb-4">
    <div class="card-header bg-gradient-gray text-white py-3">
      <h6 class="mb-0"><i class="fas fa-list me-2"></i>Danh sách học phần</h6>
    </div>
    <div class="card-body p-0">
      <div class="table-responsive">
        <table class="table table-hover align-middle mb-0" id="courseTable">
          <thead class="table-light">
            <tr>
              <th class="text-center">STT</th>
              <th>Mã Học Phần</th>
              <th>Tên Học Phần</th>
              <th class="text-center">Số Tín Chỉ</th>
              <th class="text-center">Hành Động</th>
            </tr>
          </thead>
          <tbody id="courseBody">
            <!-- JavaScript render -->
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <!-- Pagination -->
  <div class="d-flex justify-content-between align-items-center py-3">
    <button class="btn btn-outline-orange" onclick="prevPage()">
      <i class="fas fa-arrow-left me-1"></i>Trước
    </button>
    <span id="pageIndicator" class="fw-semibold text-muted"></span>
    <button class="btn btn-outline-orange" onclick="nextPage()">
      Sau<i class="fas fa-arrow-right ms-1"></i>
    </button>
  </div>

<!-- Modal thêm hoc phan -->
<div class="modal fade" id="addScoreModal" tabindex="-1" aria-labelledby="addScoreModalLabel">
  <div class="modal-dialog">
    <form id="addScoreForm" class="modal-content">
      <div class="modal-header">
        <h5 style="color:black" class="modal-title">Thêm học phần</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <input type="hidden" name="HocPhan" id="modalCourseId">
        <div class="mb-3">
          <label style="color:black" class="form-label">Tên học phần</label>
          <input type="text" class="form-control" id="modalCourseName" disabled>
        </div>
        <div class="mb-3">
          <label class="form-label" style="color:black">Giờ bắt đầu</label>
          <select class="form-select" id="gioBatDau" required>
            <option value="07:00">07:00</option>
            <option value="09:00">09:00</option>
            <option value="13:00">13:00</option>
            <option value="15:00">15:00</option>
          </select>
        </div>
        <div class="mb-3">
          <label class="form-label" style="color:black">Giờ kết thúc</label>
          <select class="form-select" id="gioKetThuc" required>
            <option value="09:00">09:00</option>
            <option value="11:00">11:00</option>
            <option value="15:00">15:00</option>
            <option value="17:00">17:00</option>
          </select>
        </div>
        <div class="mb-3">
          <label style="color:black" class="form-label">Thứ</label>
          <select class="form-select" id="thu" required>
            <option value="Thứ Hai">Thứ Hai</option>
            <option value="Thứ Ba">Thứ Ba</option>
            <option value="Thứ Tư">Thứ Tư</option>
            <option value="Thứ Năm">Thứ Năm</option>
            <option value="Thứ Sáu">Thứ Sáu</option>
            <option value="Thứ Bảy">Thứ Bảy</option>
          </select>
        </div>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-success">Lưu</button>
      </div>
    </form>
  </div>
</div>
</main>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
  const allCourses = {{{coursesJSON}}};
  const existingCourseIds = {{{existingCourseIdsJSON}}};

  const rowsPerPage = 7;
  let currentPage = 1;

  // Khởi tạo biến modal toàn cục
  const addScoreModalElement = document.getElementById('addScoreModal');
  const addScoreModal = new bootstrap.Modal(addScoreModalElement);

function renderTablePage(page) {
  const start = (page - 1) * rowsPerPage;
  const tbody = document.getElementById('courseBody');
  tbody.innerHTML = '';

  const paginatedCourses = allCourses.slice(start, start + rowsPerPage);

  paginatedCourses.forEach((course, index) => {
    const daThem = existingCourseIds.includes(String(course._id));
    const actionCell = daThem
      ? '<span class="text-success fw-bold">✅ Đã thêm</span>'
      : `<button class="btn btn-sm btn-primary" onclick="openAddScoreModal('${course._id}', '${course.tenHocPhan}')">
          <i class="fas fa-plus"></i>
        </button>`;

    tbody.innerHTML += `
      <tr>
        <td>${start + index + 1}</td>
        <td>${course.maHocPhan}</td>
        <td>${course.tenHocPhan}</td>
        <td>${course.soTinChi}</td>
        <td>${actionCell}</td>
      </tr>
    `;
  });

  document.getElementById('pageIndicator').innerText =
    `${page} / ${Math.ceil(allCourses.length / rowsPerPage)}`;
}


function nextPage() {
  const totalPages = Math.ceil(allCourses.length / rowsPerPage);
  if (currentPage < totalPages) {
    currentPage++;
    renderTablePage(currentPage);
  }
}

function prevPage() {
  if (currentPage > 1) {
    currentPage--;
    renderTablePage(currentPage);
  }
}


  function openAddScoreModal(courseId, courseName) {
    document.getElementById('modalCourseId').value = courseId;
    document.getElementById('modalCourseName').value = courseName;
    addScoreModal.show();
  }

  document.getElementById('addScoreForm').addEventListener('submit', async (e) => {
    e.preventDefault();

    const courseId = document.getElementById('modalCourseId').value;
    const gioBatDau = document.getElementById('gioBatDau').value;
    const gioKetThuc = document.getElementById('gioKetThuc').value;
    const thu = document.getElementById('thu').value;

    try {
      const response = await fetch('/course/add-course', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ HocPhan: courseId, thu, gioBatDau, gioKetThuc }),
      });

      const result = await response.json();
      alert(result.message);
      existingCourseIds.push(courseId);

      addScoreModal.hide();
      renderTablePage(currentPage);
    } catch (error) {
      console.error('Lỗi khi thêm học phần:', error);
    }
  });

  // Khởi tạo trang đầu tiên khi load
  renderTablePage(currentPage);
</script>
{{!-- Tim kiem hoc phan --}}
  <script>
    const searchInput = document.getElementById('searchInput');

    searchInput.addEventListener('input', () => {
      const keyword = searchInput.value.toLowerCase();

      // Lọc lại danh sách học phần theo từ khóa
      const filteredCourses = allCourses.filter(course => {
        return course.tenHocPhan.toLowerCase().includes(keyword) ||
              course.maHocPhan.toLowerCase().includes(keyword);
      });

      // Render lại bảng với kết quả tìm kiếm
      renderFilteredCourses(filteredCourses);
    });

    function renderFilteredCourses(courses) {
      const tbody = document.getElementById('courseBody');
      tbody.innerHTML = '';

      courses.slice(0, rowsPerPage).forEach((course, index) => {
        const daThem = existingCourseIds.includes(String(course._id));
        const actionCell = daThem
          ? '<span class="text-success fw-bold">✅ Đã thêm</span>'
          : `<button class="btn btn-sm btn-primary" onclick="openAddScoreModal('${course._id}', '${course.tenHocPhan}')">
              <i class="fas fa-plus"></i>
            </button>`;

        tbody.innerHTML += `
          <tr>
            <td>${index + 1}</td>
            <td>${course.maHocPhan}</td>
            <td>${course.tenHocPhan}</td>
            <td>${course.soTinChi}</td>
            <td>${actionCell}</td>
          </tr>
        `;
      });

      // Cập nhật chỉ số phân trang khi tìm kiếm
      document.getElementById('pageIndicator').innerText =
        `1 / ${Math.ceil(courses.length / rowsPerPage)}`;
    }
  </script>
