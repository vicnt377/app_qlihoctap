<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

<h2 style="color: aliceblue;" class="dashboard-title mb-4">üìñ Th√™m H·ªçc Ph·∫ßn</h2>
<main class="container mt-4">
<!-- T√¨m ki·∫øm h·ªçc ph·∫ßn -->
<div class="mb-3">
  <input type="text" class="form-control shadow-sm" id="searchInput" placeholder="üîç T√¨m ki·∫øm h·ªçc ph·∫ßn...">
</div>

<p class="text-muted"><small>(*) L√† h·ªçc ph·∫ßn ƒëi·ªÅu ki·ªán, kh√¥ng t√≠nh ƒëi·ªÉm trung b√¨nh chung t√≠ch l≈©y.</small></p>

<!-- B·∫£ng danh s√°ch h·ªçc ph·∫ßn -->
<div class="table-responsive shadow rounded">
  <table class="table table-hover align-middle text-center" id="courseTable">
    <thead class="table-dark">
      <tr>
        <th>STT</th>
        <th>M√£ H·ªçc Ph·∫ßn</th>
        <th>T√™n H·ªçc Ph·∫ßn</th>
        <th>S·ªë T√≠n Ch·ªâ</th>
        <th>H√†nh ƒê·ªông</th>
      </tr>
    </thead>
    <tbody id="courseBody">
      <!-- JavaScript render -->
    </tbody>
  </table>
</div>

<!-- Ph√¢n trang -->
<div class="d-flex justify-content-between align-items-center mt-3">
  <button class="btn btn-custom" onclick="prevPage()"> ‚¨ÖÔ∏è </button>
  <span id="pageIndicator" class="fw-semibold"></span>
  <button class="btn btn-custom" onclick="nextPage()"> ‚û°Ô∏è </button>
</div>

<!-- Modal th√™m hoc phan -->
<div class="modal fade" id="addScoreModal" tabindex="-1" aria-labelledby="addScoreModalLabel">
  <div class="modal-dialog">
    <form id="addScoreForm" class="modal-content">
      <div class="modal-header">
        <h5 style="color:black" class="modal-title">üìù Th√™m h·ªçc ph·∫ßn</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <input type="hidden" name="HocPhan" id="modalCourseId">
        <div class="mb-3">
          <label style="color:black" class="form-label">T√™n h·ªçc ph·∫ßn</label>
          <input type="text" class="form-control" id="modalCourseName" disabled>
        </div>
        <div class="mb-3">
          <label style="color:black" class="form-label">Gi·ªù h·ªçc</label>
          <select class="form-select" id="gioHoc" required>
            <option value="7h - 9h">7h - 9h</option>
            <option value="9h - 11h">9h - 11h</option>
            <option value="7h - 11h">7h - 11h</option>
            <option value="13h - 15h">13h - 15h</option>
            <option value="15h - 17h">15h - 17h</option>
            <option value="13h - 17h">13h - 17h</option>
          </select>
        </div>
        <div class="mb-3">
          <label style="color:black" class="form-label">Th·ª©</label>
          <select class="form-select" id="thu" required>
            <option value="Th·ª© Hai">Th·ª© Hai</option>
            <option value="Th·ª© Ba">Th·ª© Ba</option>
            <option value="Th·ª© T∆∞">Th·ª© T∆∞</option>
            <option value="Th·ª© NƒÉm">Th·ª© NƒÉm</option>
            <option value="Th·ª© S√°u">Th·ª© S√°u</option>
            <option value="Th·ª© B·∫£y">Th·ª© B·∫£y</option>
          </select>
        </div>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-success">üíæ</button>
      </div>
    </form>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
  const allCourses = {{{coursesJSON}}};
  const existingCourseIds = {{{existingCourseIdsJSON}}};

  const rowsPerPage = 7;
  let currentPage = 1;

  // Kh·ªüi t·∫°o bi·∫øn modal to√†n c·ª•c
  const addScoreModalElement = document.getElementById('addScoreModal');
  const addScoreModal = new bootstrap.Modal(addScoreModalElement);

  function renderTablePage(page) {
    const start = (page - 1) * rowsPerPage;
    const tbody = document.getElementById('courseBody');
    tbody.innerHTML = '';

    const filteredCourses = allCourses.filter(course => 
      !existingCourseIds.includes(String(course._id))
    );

    const paginatedCourses = filteredCourses.slice(start, start + rowsPerPage);

    paginatedCourses.forEach((course, index) => {
      tbody.innerHTML += `
        <tr>
          <td>${start + index + 1}</td>
          <td>${course.maHocPhan}</td>
          <td>${course.tenHocPhan}</td>
          <td>${course.soTinChi}</td>
          <td>
            <button class="btn btn-sm btn-primary" onclick="openAddScoreModal('${course._id}', '${course.tenHocPhan}')">
              <i class="fas fa-plus"></i>
            </button>
          </td>
        </tr>
      `;
    });

    document.getElementById('pageIndicator').innerText =
      `${page} / ${Math.ceil(filteredCourses.length / rowsPerPage)}`;
  }

  function prevPage() {
    if (currentPage > 1) {
      currentPage--;
      renderTablePage(currentPage);
    }
  }

  function nextPage() {
    const filteredCourses = allCourses.filter(course =>
      !existingCourseIds.includes(String(course._id))
    );
    const totalPages = Math.ceil(filteredCourses.length / rowsPerPage);

    if (currentPage < totalPages) {
      currentPage++;
      renderTablePage(currentPage);
    }
  }

  function openAddScoreModal(courseId, courseName) {
    document.getElementById('modalCourseId').value = courseId;
    document.getElementById('modalCourseName').value = courseName;
    addScoreModal.show();
  }

  document.getElementById('addScoreForm').addEventListener('submit', async (e) => {
    e.preventDefault();

    const courseId = document.getElementById('modalCourseId').value;
    const gioHoc = document.getElementById('gioHoc').value;
    const thu = document.getElementById('thu').value;

    try {
      const response = await fetch('/course/add-course', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ HocPhan: courseId, gioHoc, thu }),
      });

      const result = await response.json();
      alert(result.message);

      addScoreModal.hide();
      renderTablePage(currentPage);
    } catch (error) {
      console.error('L·ªói khi th√™m h·ªçc ph·∫ßn:', error);
    }
  });

  // Kh·ªüi t·∫°o trang ƒë·∫ßu ti√™n khi load
  renderTablePage(currentPage);
</script>


</main>

