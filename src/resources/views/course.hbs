<h2 class="dashboard-title mb-4">üìö Th√™m H·ªçc Ph·∫ßn</h2>

<div class="mb-3">
    <input type="text" class="form-control shadow-sm" id="searchInput" placeholder="üîç T√¨m ki·∫øm h·ªçc ph·∫ßn...">
</div>

<p class="text-muted"><small>(*) L√† h·ªçc ph·∫ßn ƒëi·ªÅu ki·ªán, kh√¥ng t√≠nh ƒëi·ªÉm trung b√¨nh chung t√≠ch l≈©y.</small></p>

<div class="table-responsive shadow rounded">
    <table class="table table-hover align-middle text-center" id="courseTable">
        <thead class="table-dark">
            <tr>
                <th>STT</th>
                <th>M√£ H·ªçc Ph·∫ßn</th>
                <th>T√™n H·ªçc Ph·∫ßn</th>
                <th>S·ªë T√≠n Ch·ªâ</th>
                <th>H√†nh ƒê·ªông</th>
            </tr>
        </thead>
        <tbody id="courseBody">
            <!-- N·ªôi dung th√™m b·∫±ng JavaScript -->
        </tbody>
    </table>
</div>

<div class="d-flex justify-content-between align-items-center mt-3">
    <button class="btn btn-outline-secondary" onclick="prevPage()">‚¨ÖÔ∏è Tr∆∞·ªõc</button>
    <span id="pageIndicator" class="fw-semibold"></span>
    <button class="btn btn-outline-secondary" onclick="nextPage()">Ti·∫øp ‚û°Ô∏è</button>
</div>

<!-- Th√™m h·ªçc ph·∫ßn -->
<script>
    {{!-- const semesterId = "{{semesterId}}"; --}}

    function addCourseToSemester(courseId) {
    fetch('/course/add-course', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ courseId })
    })
    .then(res => res.json())
    .then(data => {
        alert(data.message);
        location.reload();
    })
    .catch(err => console.error('L·ªói:', err));
}

</script>

<!-- Ph√¢n trang -->
<script>
    const allCourses = {{{coursesJSON}}};
    const rowsPerPage = 7;
    let currentPage = 1;

    function renderTablePage(page) {
        const start = (page - 1) * rowsPerPage;
        const paginatedCourses = allCourses.slice(start, start + rowsPerPage);

        const tbody = document.getElementById('courseBody');
        tbody.innerHTML = '';

        paginatedCourses.forEach((course, index) => {
            const row = `
                <tr>
                    <td>${start + index + 1}</td>
                    <td>${course.maHocPhan}</td>
                    <td>${course.tenHocPhan}</td>
                    <td>${course.soTinChi}</td>
                    <td>
                        <button class="btn btn-sm btn-primary" onclick="addCourseToSemester('${course._id}')">
                            <i class="fas fa-plus"></i>
                        </button>
                    </td>
                </tr>
            `;
            tbody.innerHTML += row;
        });

        document.getElementById('pageIndicator').innerText =
            `Trang ${page} / ${Math.ceil(allCourses.length / rowsPerPage)}`;
    }

    function nextPage() {
        if (currentPage * rowsPerPage < allCourses.length) {
            currentPage++;
            renderTablePage(currentPage);
        }
    }

    function prevPage() {
        if (currentPage > 1) {
            currentPage--;
            renderTablePage(currentPage);
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
        renderTablePage(currentPage);
    });
</script>

<!-- T√¨m ki·∫øm -->
<script>
    document.getElementById('searchInput').addEventListener('keyup', function () {
        const searchValue = this.value.toLowerCase();
        const rows = document.querySelectorAll('#courseBody tr');

        rows.forEach(row => {
            const cells = row.querySelectorAll('td');
            const matches = [...cells].some(cell =>
                cell.textContent.toLowerCase().includes(searchValue)
            );
            row.style.display = matches ? '' : 'none';
        });
    });
</
